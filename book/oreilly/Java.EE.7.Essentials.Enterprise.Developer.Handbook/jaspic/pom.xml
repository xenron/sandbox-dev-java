<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.javaee7</groupId>
        <artifactId>samples-parent</artifactId>
        <version>1.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    
    <artifactId>jaspic</artifactId>
    <packaging>pom</packaging>
    
    <name>Java EE 7 Sample: jaspic</name>

    <modules>
        <!-- Not a module with tests, but contains common code for the other modules -->
        <module>common</module>

        <!-- Tests a simple authentication from both public and protected resources -->
        <module>basic-authentication</module>
        
        <!-- Variant of basic-authentication that tests whether a custom principal that's set by a SAM is available
             in a Servlet via HttpServletRequest#getUserPrincipal
         -->
        <module>custom-principal</module>
        
        <!-- Tests a simple authentication like basic-authentication, but uses
             request.authenticate instead of the authentication prior to invoking
             the resource.
         -->
        <module>programmatic-authentication</module>

        <!-- Tests that the main methods of JASPIC artifacts like the SAM are called by the container at the right moment -->
        <module>lifecycle</module>
        
        <!-- Like Servlet filters, a JASPIC SAM for the Servlet Profile can wrap the request and response. This tests that 
            this indeed happens. 
        -->
        <module>wrapping</module>
        
         <!-- JASPIC is normally stateless but with a new option introduced in JASPIC 1.1 it can semi-transparently 
             remember an authenticated identity (semi, because the SAM will still be called and has to explicitly
             indicate it wants to continue this remembered session). This tests that remembering a session indeed works.
         -->
        <module>register-session</module>
        
         <!-- Tests behavior of authentication involving asynchronous requests -->
        <module>async-authentication</module>
        
        <!-- Tests that a SAM is able to set a status code into the response -->
        <module>status-codes</module>
        
         <!-- Like a Servlet a JASPIC SAM for the Servlet Profile can dispatch a request via a forward or include. This tests that 
            this is indeed possible by using plain Servlets and nothing else. -->
        <module>dispatching</module>
        
        <!-- Like a Servlet a JASPIC SAM for the Servlet Profile can dispatch a request via a forward or include. This tests that 
            this is indeed possible by using Servlets that are injected with a CDI bean and JSF views. -->
        <module>dispatching-jsf-cdi</module>
        
        <!-- Tests that an established authenticated identity by JASPIC propagates correctly to the EJB layer -->
        <module>ejb-propagation</module>
        
        <!-- Tests that an established authenticated identity by JASPIC propagates correctly to a JACC provider -->
        <module>jacc-propagation</module>
        
        <!-- Tests that a SAM is able to invoke EJB beans and CDI bean. NOTE; JASPIC 1.1 does not require this,
             although a JASPIC 1.1 compatible container "should" at least be able to call EJB beans (even though
             the spec is silent on this)
        -->
        <module>invoke-ejb-cdi</module>
        
    </modules>

    <dependencies>
        <dependency>
            <groupId>org.javaee7</groupId>
            <artifactId>test-utils</artifactId>
            <version>${project.version}</version>
        </dependency>
    </dependencies>
</project>
