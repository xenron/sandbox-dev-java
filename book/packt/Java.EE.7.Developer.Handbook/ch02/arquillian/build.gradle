/*******************************************************************************
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright (c) 2013,2014 by Peter Pilgrim, Addiscombe, Surrey, XeNoNiQUe UK
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the GNU GPL v3.0
 * which accompanies this distribution, and is available at:
 * http://www.gnu.org/licenses/gpl-3.0.txt
 *
 * Developers:
 * Peter Pilgrim -- design, development and implementation
 *               -- Blog: http://www.xenonique.co.uk/blog/
 *               -- Twitter: @peter_pilgrim
 *
 * Contributors:
 *
 *******************************************************************************/

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'idea'

// Define equivalent Maven GAV coordinates.
group = 'com.javaeehandbook.book1'
archivesBaseName = 'ch02-cdi-arquillian'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        url 'https://maven.java.net/content/groups/promoted'
    }
    maven {
        url 'http://repository.jboss.org/nexus/content/groups/public'
    }
}

dependencies {
	compile 	'org.jboss.spec:jboss-javaee-6.0:1.0.0.Final'
	compile 	'org.jboss.arquillian:arquillian-bom:1.0.3.Final'

    testCompile 'org.jboss.weld.se:weld-se-core:1.1.9.Final'
    testCompile 'org.slf4j:slf4j-simple:1.6.4'
    testCompile 'org.jboss.arquillian.container:arquillian-weld-ee-embedded-1.1:1.0.0.CR3'
	testCompile 'org.jboss.arquillian.junit:arquillian-junit-container:1.0.2.Final'           
    testCompile 'junit:junit:4.10'
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.6'
}

// Override Gradle defaults - a force an exploded JAR view
sourceSets {
    main {
        output.resourcesDir = 'build/classes/main'
        output.classesDir   = 'build/classes/main'
    }
    test {
        output.resourcesDir = 'build/classes/test'
        output.classesDir   = 'build/classes/test'
    }
}

task(run, dependsOn: 'classes', type: JavaExec) {
    description = 'Runs the main application'
    main = 'je7hb.cdi.basic.arquillian.App'
    classpath = sourceSets.main.runtimeClasspath
    args 'Mary', 'Peter', 'Jane'
}

task(generateScript, dependon: 'classes') {
    description = 'Generates UNIX bash script that launches the program.'
    if (!System.properties['os.name'].toLowerCase().contains('windows')) {
        // Not Microsoft Windows
        new File("SampleRunner").withWriter { out ->
            out.println("#!/bin/bash")
            out.println("java -cp ${sourceSets.main.runtimeClasspath.getAsPath()}  je7hb.cdi.basic.arquillian.App")
        }
        "chmod 755 SampleRunner".execute()
    }
}

