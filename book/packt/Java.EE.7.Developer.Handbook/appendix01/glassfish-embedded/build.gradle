/*******************************************************************************
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright (c) 2013,2014 by Peter Pilgrim, Addiscombe, Surrey, XeNoNiQUe UK
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the GNU GPL v3.0
 * which accompanies this distribution, and is available at:
 * http://www.gnu.org/licenses/gpl-3.0.txt
 *
 * Developers:
 * Peter Pilgrim -- design, development and implementation
 *               -- Blog: http://www.xenonique.co.uk/blog/
 *               -- Twitter: @peter_pilgrim
 *
 * Contributors:
 *
 *******************************************************************************/

apply plugin: 'java'
// apply plugin: 'war'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'idea'

// Define equivalent Maven GAV coordinates.
group = 'com.javaeehandbook.book1'
archivesBaseName = 'glassfish-embedded-runner'
version = '1.0'

repositories {
    maven {
        url 'https://maven.java.net/content/groups/promoted'
    }
    maven {
        url 'http://repository.jboss.org/nexus/content/groups/public'
    }
    mavenCentral()
    mavenLocal()
}


dependencies {
//    providedCompile     'org.glassfish.main.extras:glassfish-embedded-all:4.0-b79'

    compile     'org.glassfish.main.extras:glassfish-embedded-all:4.0-b72'
    compile     'javax:javaee-api:7.0-b72'

    testCompile 'junit:junit:4.11'
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.5'
}

// Override Gradle defaults - a force an exploded JAR view
sourceSets {
    main {
        output.resourcesDir = 'build/classes/main'
        output.classesDir   = 'build/classes/main'
    }
    test {
        output.resourcesDir = 'build/classes/test'
        output.classesDir   = 'build/classes/test'
    }
}

// Add a sources jar
task sourcesJar(type: Jar, dependsOn:classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

// add the jars as artifacts
artifacts {
    archives sourcesJar
//    archives javadocJar
//    archives testJar
}
task(run, dependsOn: 'classes', type: JavaExec) {
    description = 'Runs the main application'
    main = 'je7hb.common.webcontainer.embedded.glassfish.App'
    classpath = sourceSets.main.runtimeClasspath
    args 'Mary', 'Peter', 'Jane'
}

task(generateScript, dependon: 'classes') {
    description = 'Generates UNIX bash script that launches the program.'
    if (!System.properties['os.name'].toLowerCase().contains('windows')) {
        // Not Microsoft Windows
        new File("SampleRunner").withWriter { out ->
            out.println("#!/bin/bash")
            out.println("java -cp ${sourceSets.main.runtimeClasspath.getAsPath()}  je7hb.common.webcontainer.embedded.glassfish.App")
        }
        "chmod 755 SampleRunner".execute()
    }
}

