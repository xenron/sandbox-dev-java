<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.jboss.jaxrs</groupId>
	<artifactId>jboss-jaxrs</artifactId>
	<version>1.0.0</version>
	<packaging>war</packaging>
	<name>WildFly JAX-RS</name>
	<description>A starter Java EE 7 webapp project for use on JBoss WildFly / WildFly, generated from the jboss-javaee6-webapp archetype</description>

	<url>http://wildfly.org</url>
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<distribution>repo</distribution>
			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
		</license>
	</licenses>

	<properties>
		<!-- Explicitly declaring the source encoding eliminates the following 
			message: -->
		<!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
			resources, i.e. build is platform dependent! -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- JBoss dependency versions -->
		<version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>

		<!-- Define the version of the JBoss BOMs we want to import to specify 
			tested stacks. -->
		<version.jboss.bom>8.1.0.Final</version.jboss.bom>
		<version.arquillian.container>8.1.0.Final</version.arquillian.container>

		<!-- other plugin versions -->
		<version.compiler.plugin>3.1</version.compiler.plugin>
		<version.war.plugin>2.1.1</version.war.plugin>

		<!-- maven-compiler-plugin -->
		<maven.compiler.target>1.7</maven.compiler.target>
		<maven.compiler.source>1.7</maven.compiler.source>
	</properties>


	<dependencyManagement>
		<dependencies>

			<dependency>
				<groupId>org.wildfly.bom</groupId>
				<artifactId>jboss-javaee-7.0-with-tools</artifactId>
				<version>${version.jboss.bom}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.spec</groupId>
				<artifactId>jboss-javaee-web-7.0</artifactId>
				<version>1.0.0.Final</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<!-- First declare the APIs we depend on and need for compilation. All 
			of them are provided by JBoss WildFly -->

		<!-- Import the CDI API, we use provided scope as the API is included in 
			JBoss WildFly -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the Common Annotations API (JSR-250), we use provided scope 
			as the API is included in JBoss WildFly -->
		<dependency>
			<groupId>org.jboss.spec.javax.annotation</groupId>
			<artifactId>jboss-annotations-api_1.2_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the JAX-RS API, we use provided scope as the API is included 
			in JBoss WildFly -->

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
		</dependency>

		<dependency>
			<groupId>org.jboss.spec.javax.ws.rs</groupId>
			<artifactId>jboss-jaxrs-api_1.1_spec</artifactId>
			<version>1.0.1.Final</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-server</artifactId>
			<version>1.18</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-core</artifactId>
			<version>1.18</version>
		</dependency>

		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-servlet</artifactId>
			<version>1.18</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-client</artifactId>
			<version>1.18</version>
		</dependency>


	</dependencies>

	<build>
		<!-- Maven will append the version to the finalName (which is the name 
			given to the generated war, and hence the context root) -->
		<finalName>${project.artifactId}</finalName>
		<pluginManagement>
			<plugins>
				<!-- Compiler plugin enforces Java 1.6 compatibility and activates annotation 
					processors -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jvnet.jax-ws-commons</groupId>
										<artifactId>jaxws-maven-plugin</artifactId>
										<versionRange>[2.2,)</versionRange>
										<goals>
											<goal>wsimport</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>

				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${version.compiler.plugin}</version>
					<configuration>
						<source>${maven.compiler.source}</source>
						<target>${maven.compiler.target}</target>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-war-plugin</artifactId>
					<version>${version.war.plugin}</version>
					<configuration>
						<outputDirectory>C:\wildfly-8.1.0.Final\standalone\deployments</outputDirectory>
						<!-- Java EE 7 doesn't require web.xml, Maven needs to catch up! -->
						<failOnMissingWebXml>false</failOnMissingWebXml>
					</configuration>
				</plugin>
				<!-- The WildFly plugin deploys your war to a local WildFly container -->
				<!-- To use, run: mvn package wildfly:deploy -->
				<plugin>
					<groupId>org.wildfly.plugins</groupId>
					<artifactId>wildfly-maven-plugin</artifactId>
					<version>${version.wildfly.maven.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.jvnet.jax-ws-commons</groupId>
					<artifactId>jaxws-maven-plugin</artifactId>
					<version>2.2</version>
					<executions>
						<execution>
							<id>HelloWorldService</id>
							<phase>compile</phase>
							<goals>
								<goal>wsgen</goal>
							</goals>
							<configuration>
								<sei>org.jboss.jaxws.service.HelloWorld</sei>

								<genwsdl>true</genwsdl>
								<servicename>HelloWorldService</servicename>
								<keep>true</keep>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.jvnet.jax-ws-commons</groupId>
					<artifactId>jaxws-maven-plugin</artifactId>
					<version>2.3</version>
					<executions>
						<execution>
							<id>HelloWorldService</id>
							<goals>
								<goal>wsimport</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<packagename>org.jboss.jaxws.service</packagename>
						<target>2.0</target>
						<keep>true</keep>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>com.sun.xml.ws</groupId>
							<artifactId>jaxws-tools</artifactId>
							<version>2.2.8</version>
							<exclusions>
								<exclusion>
									<groupId>org.jvnet.staxex</groupId>
									<artifactId>stax-ex</artifactId>
								</exclusion>
							</exclusions>
						</dependency>
						<dependency>
							<groupId>org.jvnet.staxex</groupId>
							<artifactId>stax-ex</artifactId>
							<version>1.7.6</version>
							<exclusions>
								<exclusion>
									<groupId>javax.xml.stream</groupId>
									<artifactId>stax-api</artifactId>
								</exclusion>
							</exclusions>
						</dependency>
					</dependencies>
				</plugin>

			</plugins>
		</pluginManagement>
	</build>


</project>
